#!/bin/bash
set -eu
cd $(dirname "$0")/../docker

imgs=(base nginx indexer)
version=$(cat ../VERSION)
push=
latest=
build=1

TEMP=$(getopt -o '' --long push,latest,build,no-build,help,version: \
     -n 'build.sh' -- "$@")

if [ $? != 0 ] ; then exit 1 ; fi

eval set -- "$TEMP"
while true ; do
    case "$1" in
        --push) push=1; shift ;;
        --build) build=1; shift ;;
        --latest) latest=1; shift ;;
        --no-build) build=; shift ;;
        --version) version=$2; shift 2 ;;
        --help)
            cat >&2 <<'EOF'
Usage: $0 [OPTION]...
Build the docker images in docker/ and optionally push them to docker hub.

      --push               Run `docker push` to push to docker hub
      --latest             Additionally tag each image with the `latest` tag.
      --no-build           Don't build, just push already-built images
      --help               Display this help and exit.
      --version=V          Use the specified version instead of the VERSION
                           file.

Uses the version in the VERSION file to version images.

EOF
            exit 1
            shift
        ;;
        --) shift; break ;;
    esac
done

if [ "$#" -ne 0 ]; then
    imgs=("$@")
fi

if [ "$build" ]; then
    for img in "${imgs[@]}"; do
        if [ "$img"  = "base" ]; then
            extra_args=(--build-arg "livegrep_version=${version%-*}")
        else
            extra_args=()
            docker tag "livegrep/base:$version" "livegrep/base:latest"
        fi
        docker build -t "livegrep/$img:$version" "$img" ${extra_args[@]+"${extra_args[@]}"}
    done
fi

if [ "$latest" ]; then
    for img in "${imgs[@]}"; do
        docker tag "livegrep/$img:$version" "livegrep/$img:latest"
    done
fi

if [ "$push" ]; then
    for img in "${imgs[@]}"; do
        docker push "livegrep/$img:$version"
        if [ "$latest" ]; then
            docker push "livegrep/$img:latest"
        fi
    done
fi
